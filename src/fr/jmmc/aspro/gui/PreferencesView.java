/*******************************************************************************
 * JMMC project
 *
 * "@(#) $Id: PreferencesView.java,v 1.6 2010-06-17 10:02:50 bourgesl Exp $"
 *
 * History
 * -------
 * $Log: not supported by cvs2svn $
 * Revision 1.5  2010/06/08 12:32:46  bourgesl
 * javadoc
 *
 * Revision 1.4  2010/05/21 14:27:34  bourgesl
 * added preferences for Model Image Lut & Size
 *
 * Revision 1.3  2010/05/19 09:08:10  mella
 * dispose on close
 *
 * Revision 1.2  2010/05/17 16:09:03  mella
 * Add the preference view as preference observer
 *
 * Revision 1.1  2010/05/12 08:44:10  mella
 * Add one preferences window first to choose the default style of display for positions
 *
 *
 */
package fr.jmmc.aspro.gui;

import fr.jmmc.aspro.AsproConstants;
import fr.jmmc.aspro.Preferences;
import fr.jmmc.mcs.image.ColorModels;
import fr.jmmc.mcs.util.PreferencesException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;

/**
 * Preferences GUI
 */
public class PreferencesView extends javax.swing.JFrame implements Observer {

  /** default serial UID for Serializable interface */
  private static final long serialVersionUID = 1;
  /** Class Name */
  private static final String className_ = "fr.jmmc.aspro.gui.PreferencesView";
  /** Class logger */
  private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(
          className_);
  /** preference singleton */
  private final static Preferences myPreferences = Preferences.getInstance();

  /** Creates new form PreferencesView */
  public PreferencesView() {
    initComponents();

    postInit();

    // update GUI
    myPreferences.addObserver(this);
    update(null, null);

    // pack and center window
    pack();
    setLocationRelativeTo(null);
  }

  /**
   * This method is useful to set the models and specific features of initialized swing components :
   * Update the combo boxes with their models
   */
  private void postInit() {
    // define custom models :
    this.jComboBoxLUT.setModel(new DefaultComboBoxModel(ColorModels.getColorModelNames()));
    this.jComboBoxImageSize.setModel(new DefaultComboBoxModel(AsproConstants.IMAGE_SIZES));
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    buttonGroup1 = new javax.swing.ButtonGroup();
    jPanel3 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jRadioButtonXY = new javax.swing.JRadioButton();
    jRadioButtonRhoTheta = new javax.swing.JRadioButton();
    jPanel1 = new javax.swing.JPanel();
    jLabel8 = new javax.swing.JLabel();
    jComboBoxLUT = new javax.swing.JComboBox();
    jLabel9 = new javax.swing.JLabel();
    jComboBoxImageSize = new javax.swing.JComboBox();
    jPanel2 = new javax.swing.JPanel();
    jButtonDefault = new javax.swing.JButton();
    jButtonSave = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Preferences");
    getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Editor"));
    jPanel3.setLayout(new java.awt.GridBagLayout());

    jLabel1.setText("<html>Default style to <br/>edit model positions : </htmL>");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 2;
    jPanel3.add(jLabel1, gridBagConstraints);

    buttonGroup1.add(jRadioButtonXY);
    jRadioButtonXY.setSelected(true);
    jRadioButtonXY.setText("x / y (mas)");
    jRadioButtonXY.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jRadioButtonXYActionPerformed(evt);
      }
    });
    jPanel3.add(jRadioButtonXY, new java.awt.GridBagConstraints());

    buttonGroup1.add(jRadioButtonRhoTheta);
    jRadioButtonRhoTheta.setText("rho (mas) / theta");
    jRadioButtonRhoTheta.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jRadioButtonXYActionPerformed(evt);
      }
    });
    jPanel3.add(jRadioButtonRhoTheta, new java.awt.GridBagConstraints());

    getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_START);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Image"));
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jLabel8.setText("LUT table");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    jPanel1.add(jLabel8, gridBagConstraints);

    jComboBoxLUT.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBoxLUTActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    jPanel1.add(jComboBoxLUT, gridBagConstraints);

    jLabel9.setText("Image size");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    jPanel1.add(jLabel9, gridBagConstraints);

    jComboBoxImageSize.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBoxImageSizeActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
    jPanel1.add(jComboBoxImageSize, gridBagConstraints);

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    jButtonDefault.setText("Restore Default Settings");
    jButtonDefault.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonDefaultActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonDefault);

    jButtonSave.setText("Save Modifications");
    jButtonSave.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonSaveActionPerformed(evt);
      }
    });
    jPanel2.add(jButtonSave);

    getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);
  }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonXYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonXYActionPerformed
      try {
        // will fire triggerObserversNotification so update() will be called
        myPreferences.setPreference(Preferences.MODELEDITOR_PREFERXY, jRadioButtonXY.isSelected());
      } catch (PreferencesException pe) {
        logger.log(Level.SEVERE, null, pe);
      }
    }//GEN-LAST:event_jRadioButtonXYActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
      try {
        myPreferences.saveToFile();
      } catch (PreferencesException pe) {
        // this try catch should not be solved here
        // one feedback report could be thrown on error into Preference code
        logger.log(Level.SEVERE, null, pe);
      }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefaultActionPerformed
      myPreferences.resetToDefaultPreferences();
    }//GEN-LAST:event_jButtonDefaultActionPerformed

    private void jComboBoxImageSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxImageSizeActionPerformed
      try {
        // will fire triggerObserversNotification so update() will be called
        myPreferences.setPreference(Preferences.MODEL_IMAGE_SIZE, this.jComboBoxImageSize.getSelectedItem());
      } catch (PreferencesException pe) {
        logger.log(Level.SEVERE, null, pe);
      }
    }//GEN-LAST:event_jComboBoxImageSizeActionPerformed

    private void jComboBoxLUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLUTActionPerformed
      try {
        // will fire triggerObserversNotification so update() will be called
        myPreferences.setPreference(Preferences.MODEL_IMAGE_LUT, this.jComboBoxLUT.getSelectedItem());
      } catch (PreferencesException pe) {
        logger.log(Level.SEVERE, null, pe);
      }
    }//GEN-LAST:event_jComboBoxLUTActionPerformed

  /**
   * Listen to preferences changes
   * @param o
   * @param arg
   */
  public void update(final Observable o, final Object arg) {
    // read prefs to set states of GUI elements
    final boolean preferXyMode = myPreferences.getPreferenceAsBoolean(Preferences.MODELEDITOR_PREFERXY);
    this.jRadioButtonXY.setSelected(preferXyMode);
    this.jRadioButtonRhoTheta.setSelected(!preferXyMode);

    this.jComboBoxLUT.setSelectedItem(myPreferences.getPreference(Preferences.MODEL_IMAGE_LUT));

    this.jComboBoxImageSize.setSelectedItem(myPreferences.getPreferenceAsInt(Preferences.MODEL_IMAGE_SIZE));
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.JButton jButtonDefault;
  private javax.swing.JButton jButtonSave;
  private javax.swing.JComboBox jComboBoxImageSize;
  private javax.swing.JComboBox jComboBoxLUT;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JRadioButton jRadioButtonRhoTheta;
  private javax.swing.JRadioButton jRadioButtonXY;
  // End of variables declaration//GEN-END:variables
}
