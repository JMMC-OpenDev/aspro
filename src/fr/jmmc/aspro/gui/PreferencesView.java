/*******************************************************************************
 * JMMC project
 *
 * "@(#) $Id: PreferencesView.java,v 1.3 2010-05-19 09:08:10 mella Exp $"
 *
 * History
 * -------
 * $Log: not supported by cvs2svn $
 * Revision 1.2  2010/05/17 16:09:03  mella
 * Add the preference view as preference observer
 *
 * Revision 1.1  2010/05/12 08:44:10  mella
 * Add one preferences window first to choose the default style of display for positions
 *
 *
 */
package fr.jmmc.aspro.gui;

import fr.jmmc.aspro.Preferences;
import fr.jmmc.mcs.util.PreferencesException;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Preferences GUI
 */
public class PreferencesView extends javax.swing.JFrame implements Observer{

    static Preferences myPreferences = Preferences.getInstance();

    /** Creates new form PreferencesView */
    public PreferencesView() {
        initComponents();

        // update GUI
        myPreferences.addObserver(this);
        update(null, null);
        
        // pack and center window
        pack();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonRhoTheta = new javax.swing.JRadioButton();
        jRadioButtonXY = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonDefault = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButtonRhoTheta);
        jRadioButtonRhoTheta.setText("rho (mas) / theta [-180°; 180°]");
        jRadioButtonRhoTheta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonXYActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(jRadioButtonRhoTheta, gridBagConstraints);

        buttonGroup1.add(jRadioButtonXY);
        jRadioButtonXY.setSelected(true);
        jRadioButtonXY.setText("x / y (mas)");
        jRadioButtonXY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonXYActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        jPanel1.add(jRadioButtonXY, gridBagConstraints);

        jLabel1.setText("Style of display for model position : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jButtonSave, gridBagConstraints);

        jButtonDefault.setText("Default");
        jButtonDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefaultActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jButtonDefault, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonXYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonXYActionPerformed
        try {
            myPreferences.setPreference(Preferences.MODELEDITOR_PREFERXY, jRadioButtonXY.isSelected());
        } catch (PreferencesException ex) {
            Logger.getLogger(PreferencesView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jRadioButtonXYActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        try {
            myPreferences.saveToFile();
        } catch (PreferencesException exc) {
            // this try catch should not be solved here
            // one feedback report could be thrown on error into Preference code
            exc.printStackTrace();
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefaultActionPerformed
        myPreferences.resetToDefaultPreferences();
    }//GEN-LAST:event_jButtonDefaultActionPerformed

    /**
     * Listen to preferences changes
     * @param o
     * @param arg
     */
    public void update(Observable o, Object arg) {
        // read prefs to set states of GUI elements
        boolean preferXyMode = myPreferences.getPreferenceAsBoolean(Preferences.MODELEDITOR_PREFERXY);
        this.jRadioButtonRhoTheta.setSelected(!preferXyMode);
        this.jRadioButtonXY.setSelected(preferXyMode);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PreferencesView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonDefault;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonRhoTheta;
    private javax.swing.JRadioButton jRadioButtonXY;
    // End of variables declaration//GEN-END:variables
}
